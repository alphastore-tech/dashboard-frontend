name: Push Prod Image to Amazon ECR

# when tagging action success
on:
  workflow_run:
    workflows: ["Create Release and Tag"]
    types:
      - completed

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: alphastore/alphastore-dashboard

jobs:
  if_workflow_success:
    name: Build and Push
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Get previous tag-version
      id: previous_tag
      uses: WyriHaximus/github-action-get-previous-tag@v1
      with:
        fallback: 1.0.0
    
    - name: Set Tag Version
      id: tag
      uses: actions/github-script@v4
      with:
        script: |
          const tagVersion = "${{ steps.previous_tag.outputs.tag }}".replace('v', '')
          core.setOutput('tag', tagVersion)
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build & Push (Buildx + 캐시)
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ steps.tag.outputs.tag }}
          ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
        build-args: |
          KIS_APP_KEY=${{ secrets.KIS_APP_KEY }}
          KIS_APP_SECRET=${{ secrets.KIS_APP_SECRET }}
          KIS_DOMAIN=${{ secrets.KIS_DOMAIN }}
          NEXT_PUBLIC_KIS_CANO=${{ secrets.NEXT_PUBLIC_KIS_CANO }}
          NEXT_PUBLIC_KIS_ACNT_PRDT_CD=${{ secrets.NEXT_PUBLIC_KIS_ACNT_PRDT_CD }}
          NEXT_PUBLIC_KIS_FUTURE_ACNT_PRDT_CD=${{ secrets.NEXT_PUBLIC_KIS_FUTURE_ACNT_PRDT_CD }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION=${{ env.AWS_REGION }}
          AWS_SECRET_ID=${{ secrets.AWS_SECRET_ID }}
          